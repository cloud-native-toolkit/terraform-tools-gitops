name: Verify

# Controls when the action will run.
on:
  workflow_call:
    secrets:
      IBMCLOUD_API_KEY:
        required: true
      GITU_CONFIG:
        required: true
      GIT_ORG:
        required: false
      GIT_PROJECT:
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  verify:
    runs-on: ubuntu-latest
    container: quay.io/cloudnativetoolkit/terraform:v1.2

    strategy:
      matrix:
        testcase:
          - github.com
          - github.ibm.com
          - us-south.git.cloud.ibm.com
#          - bitbucket.org
#          - dev.azure.com
          - gitea
      fail-fast: false

    env:
      HOME: /home/devops

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - id: variables
        name: Set up variables
        env:
          GIT_ORG: ${{ secrets.GIT_ORG }}
          GITU_CONFIG: ${{ secrets.GITU_CONFIG }}
          GIT_PROJECT: ${{ secrets.GIT_PROJECT }}
        shell: bash
        run: |
          repo=$(echo "${GITHUB_REPOSITORY}" | sed -E "s~.*/[^-]+-(.*)~\1j~g")
          echo "Repo: $repo"
          echo "::set-output name=repo::$repo"

          org="${GIT_ORG:-cloud-native-toolkit-test}"
          echo "Org: $org"
          echo "::set-output name=org::$org"
          
          project="${GIT_PROJECT:-Test}"
          echo "Project: $project"
          echo "::set-output name=project::$project"
          
          if [[ "gitea" == "${{ matrix.testcase }}" ]]; then
            echo "::set-output name=host::"
            echo "::set-output name=username::"
            echo "::set-output name=token::"        
            exit 0
          else
            echo "::set-output name=host::${{ matrix.testcase }}"            
          fi
          
          username=$(echo "${GITU_CONFIG}" |  yq '.credentials[] | select(.host == "${{ matrix.testcase }}") | .username')
          echo "Username: $username"
          if [[ -z "${username}" ]]; then
            echo "Username config missing" >&2
            exit 1
          fi
          echo "::set-output name=username::$username"
          
          token=$(echo "${GITU_CONFIG}" |  yq '.credentials[] | select(.host == "${{ matrix.testcase }}") | .token')
          echo "Token: xxx"
          if [[ -z "${token}" ]]; then
            echo "Token config missing" >&2
            exit 1
          fi
          echo "::set-output name=token::$token"

      - name: Verify deploy on ${{ matrix.testcase }}
        uses: cloud-native-toolkit/action-module-verify-deploy@main
        with:
          clusterId: "ibm_ocp49"
          validateDeployScript: .github/scripts/validate-deploy.sh
        env:
          TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
          TF_VAR_git_host: ${{ steps.variables.outputs.host }}
          TF_VAR_git_username: ${{ steps.variables.outputs.username }}
          TF_VAR_git_token: ${{ steps.variables.outputs.token }}
          TF_VAR_git_org: ${{ steps.variables.outputs.org }}
          TF_VAR_git_repo: ${{ steps.variables.outputs.repo }}
          TF_VAR_git_project: ${{ steps.variables.outputs.project }}

      - name: Verify destroy on ${{ matrix.testcase }}
        uses: cloud-native-toolkit/action-module-verify-destroy@main
        if: ${{ always() }}
        with:
          clusterId: "ibm_ocp49"
        env:
          TF_VAR_ibmcloud_api_key: ${{ secrets.IBMCLOUD_API_KEY }}
          TF_VAR_git_host: ${{ steps.variables.outputs.host }}
          TF_VAR_git_username: ${{ steps.variables.outputs.username }}
          TF_VAR_git_token: ${{ steps.variables.outputs.token }}
          TF_VAR_git_org: ${{ steps.variables.outputs.org }}
          TF_VAR_git_repo: ${{ steps.variables.outputs.repo }}
          TF_VAR_git_project: ${{ steps.variables.outputs.project }}
